[{"C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\firebase.js":"1","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\store\\actions\\index.js":"2","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\Messages\\Messages.js":"3","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\SidePanel\\PanelUser\\PanelUser.js":"4","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\Messages\\Message\\Message.js":"5","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\SidePanel\\PanelSearch\\PanelSearch.js":"6","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\App.js":"7","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\Auth\\Register\\Register.js":"8","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\Auth\\LogIn\\LogIn.js":"9","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\Messages\\MessagesHeader\\MessagesHeader.js":"10","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\store\\actions\\types.js":"11","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\Header\\Header.js":"12","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\UI\\CssLoader\\CssLoader.js":"13","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\SidePanel\\SidePanel.js":"14","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\Header\\Dropdown\\Dropdown.js":"15"},{"size":596,"mtime":1603907804000,"results":"16","hashOfConfig":"17"},{"size":655,"mtime":1602273742000,"results":"18","hashOfConfig":"17"},{"size":1803,"mtime":1603730494000,"results":"19","hashOfConfig":"17"},{"size":4660,"mtime":1603525050000,"results":"20","hashOfConfig":"17"},{"size":622,"mtime":1602992158000,"results":"21","hashOfConfig":"17"},{"size":682,"mtime":1603086970000,"results":"22","hashOfConfig":"17"},{"size":991,"mtime":1606359162000,"results":"23","hashOfConfig":"17"},{"size":9553,"mtime":1606362388000,"results":"24","hashOfConfig":"17"},{"size":4756,"mtime":1606361838000,"results":"25","hashOfConfig":"17"},{"size":2236,"mtime":1606370226000,"results":"26","hashOfConfig":"17"},{"size":226,"mtime":1602264706000,"results":"27","hashOfConfig":"17"},{"size":2317,"mtime":1606370180000,"results":"28","hashOfConfig":"17"},{"size":537,"mtime":1601751316000,"results":"29","hashOfConfig":"17"},{"size":583,"mtime":1603077694000,"results":"30","hashOfConfig":"17"},{"size":544,"mtime":1602225500000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1kspsih",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\firebase.js",[],["69","70"],"C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\store\\actions\\index.js",[],"C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\Messages\\Messages.js",[],"C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\SidePanel\\PanelUser\\PanelUser.js",[],"C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\Messages\\Message\\Message.js",["71"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport './Message.scss'\r\n\r\nconst isOwnMessage = (message, user) => {\r\n  return message.user.id === user.uid ? \"Message__text ownMessage\" : \"Message__text\";\r\n};\r\n\r\nconst timeFromNow = timestamp => moment(timestamp).fromNow();\r\n\r\nconst Message = ({ message, user }) => (\r\n  <div className=\"Message\">\r\n  <img className=\"Message__photo\"\r\n  src={message.user.avatar}/>\r\n  <p className={isOwnMessage(message,user)}>\r\n  {message.content}\r\n  </p>\r\n  <div className=\"Message__timing\">\r\n  {timeFromNow(message.timestamp)}\r\n  </div>\r\n</div>\r\n);\r\n\r\nexport default Message;\r\n\r\n","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\SidePanel\\PanelSearch\\PanelSearch.js",[],"C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\App.js",[],["72","73"],"C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\Auth\\Register\\Register.js",["74"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport './Register.scss';\r\nimport firebase from '../../../firebase';\r\nimport { AvatarGenerator } from 'random-avatar-generator';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faFacebookF,\r\n  faGooglePlusG,\r\n  faTwitter,\r\n} from '@fortawesome/free-brands-svg-icons';\r\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonLoader from '../../UI/ButtonLoader/ButtonLoader';\r\n\r\nconst Register = () => {\r\n  // STATE DEFINED HERE\r\n  const [state, setState] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n\r\n    errors: [],\r\n    userRef: firebase.database().ref('users'),\r\n    checked: true,\r\n    passwordType: true,\r\n    loading: false,\r\n  });\r\n\r\n  // HANDLECHANGE() DEFINED HERE\r\n  const handleChange = (event) => {\r\n    setState((prevState) => {\r\n      return { ...prevState, errors: [] };\r\n    });\r\n    event.persist();\r\n    setState((prevState) => {\r\n      return { ...prevState, [event.target.name]: event.target.value };\r\n    });\r\n  };\r\n  // CLIENT SIDE VALIDATION\r\n  // CHECK FOR EMPTY FIELDS\r\n  const ifFormIsEmpty = ({ username, email, password, confirmPassword }) =>\r\n    !username.length || !email.length || !password.length || !confirmPassword.length;\r\n  // CHECK FOR PASSWORD MATCH AND LENGTH\r\n  const isPasswordValid = ({ password, confirmPassword }) => {\r\n    let error;\r\n    password.length < 6 || confirmPassword.length < 6\r\n      ? (error = 'Password is too short')\r\n      : password !== confirmPassword\r\n      ? (error = 'Password should match')\r\n      : (error = null);\r\n    return error;\r\n  };\r\n  // ISFORMVALID DEFINED HERE\r\n  const isFormValid = () => {\r\n    let error;\r\n    if (ifFormIsEmpty(state)) {\r\n      error = { message: 'Fields must have value' };\r\n      setState((prevState) => {\r\n        return { ...prevState, errors: prevState.errors.concat(error.message) };\r\n      });\r\n      return false;\r\n    } else if (isPasswordValid(state)) {\r\n      error = isPasswordValid(state);\r\n      setState((prevState) => {\r\n        return { ...prevState, errors: prevState.errors.concat(error) };\r\n      });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  // HANDLESUBMIT DEFINED HERE\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (isFormValid()) {\r\n      setState((prevState) => {\r\n        return { ...prevState, loading: true };\r\n      });\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(state.email, state.password)\r\n        .then((createdUser) => {\r\n          console.log(createdUser);\r\n          const generator = new AvatarGenerator();\r\n          createdUser.user\r\n            .updateProfile({\r\n              displayName: state.username,\r\n              photoURL: generator.generateRandomAvatar(createdUser.user.uid),\r\n            })\r\n            .then(() => {\r\n              saveUser(createdUser.user);\r\n              console.log('Saved user');\r\n              setState((prevState) => {\r\n                return { ...prevState, loading: false };\r\n              });\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          setState((prevState) => {\r\n            return {\r\n              ...prevState,\r\n              errors: state.errors.concat(err.message),\r\n              loading: false,\r\n            };\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  // SAVE USER TO DATABASE\r\n  const saveUser = (createdUser) => {\r\n    return state.userRef.child(createdUser.uid).set({\r\n      name: createdUser.displayName,\r\n      email: createdUser.email,\r\n      avatar: createdUser.photoURL,\r\n      age: null,\r\n      bio: '',\r\n      workAt: '',\r\n      address: {\r\n        country: '',\r\n        city: '',\r\n      },\r\n    });\r\n  };\r\n  // HANDLING CHECKBOX\r\n  const handleCheckbox = () => {\r\n    const checked = state.checked;\r\n    setState((prevState) => {\r\n      return { ...prevState, checked: !checked };\r\n    });\r\n  };\r\n  // HANDLE SHOW&HIDE PASSWORD\r\n  const handleShowPassword = () => {\r\n    let passwordType = state.passwordType;\r\n    setState((prevState) => {\r\n      return { ...prevState, passwordType: !passwordType };\r\n    });\r\n  };\r\n\r\n  // Google Sign In\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((response) => {\r\n        saveUser(response.user);\r\n      })\r\n      .catch((err) => {\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            errors: state.errors.concat(err.message),\r\n          };\r\n        });\r\n      });\r\n  };\r\n  // Facebook Sign In\r\n  const signInWithFacebook = () => {\r\n    const provider = new firebase.auth.FacebookAuthProvider();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((response) => {\r\n        saveUser(response.user);\r\n      })\r\n      .catch((err) => {\r\n        setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            errors: state.errors.concat(err.message),\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  const fullName = useRef(null);\r\n  useEffect(() => {\r\n    fullName.current.focus();\r\n  }, []);\r\n  // Only showPasswordIcon on password have value\r\n  const showOnPass = () => {\r\n    let display = { display: 'none' };\r\n    if (state.password.length) {\r\n      display.display = 'inline-block';\r\n    }\r\n    return display;\r\n  };\r\n\r\n  // DOM RENDERING\r\n  const displayErrors = () => {\r\n    return state.errors.length && state.errors.toString().includes('network')\r\n      ? 'Oops Bad Network Connection or Settimeout'\r\n      : state.errors;\r\n  };\r\n  return (\r\n    // Register\r\n    <div\r\n      style={{\r\n        width: '100%',\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        background: '#2E86DE',\r\n      }}\r\n    >\r\n      <div className='Register'>\r\n        {/* Register Title*/}\r\n        <h1 className='Register__title'>Register</h1>\r\n        {/* Register Form*/}\r\n        <form className='Register__form' onSubmit={handleSubmit}>\r\n          {/* Register Input Group*/}\r\n          <div className='Register__inputGroup'>\r\n            <input\r\n              className='Register__input'\r\n              placeholder='Full Name'\r\n              name='username'\r\n              onChange={handleChange}\r\n              ref={fullName}\r\n            />\r\n            <input\r\n              className='Register__input'\r\n              placeholder='Email'\r\n              name='email'\r\n              onChange={handleChange}\r\n            />\r\n            <input\r\n              className='Register__input'\r\n              placeholder='Password'\r\n              name='password'\r\n              type={state.passwordType ? 'password' : 'text'}\r\n              onChange={handleChange}\r\n            />\r\n            <FontAwesomeIcon\r\n              icon={faEye}\r\n              className='Register__showPassword'\r\n              onClick={handleShowPassword}\r\n              style={showOnPass()}\r\n            />\r\n            <input\r\n              className='Register__input'\r\n              placeholder='Confirm Password'\r\n              name='confirmPassword'\r\n              type='password'\r\n              type={state.passwordType ? 'password' : 'text'}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          {/* Register Social SignUp*/}\r\n          <div className='Register__socialSignUp'>\r\n            {/* Register Social Icon Group*/}\r\n            <h2 className='Register__socialSignUp_title'>Connect With</h2>\r\n            <div className='Register__iconGroup'>\r\n              <div className='Register__icon Register__icon_facebook'>\r\n                <FontAwesomeIcon icon={faFacebookF} onClick={signInWithFacebook} />\r\n              </div>\r\n\r\n              <div className='Register__icon Register__icon_google'>\r\n                <FontAwesomeIcon icon={faGooglePlusG} onClick={signInWithGoogle} />\r\n              </div>\r\n\r\n              <div className='Register__icon Register__icon_twitter'>\r\n                <FontAwesomeIcon icon={faTwitter} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Register Stay SignedIn*/}\r\n          <div className='Register__staySigned'>\r\n            <input\r\n              type='checkbox'\r\n              defaultChecked={state.checked}\r\n              onClick={handleCheckbox}\r\n              id='checkbox'\r\n            />\r\n            <label className='Register__staySigned_text' htmlFor='checkbox'>\r\n              Remember Password\r\n            </label>\r\n          </div>\r\n          {/* Register Button*/}\r\n          <button\r\n            className='Register__button'\r\n            type='button'\r\n            onClick={handleSubmit}\r\n            disabled={state.errors.length}\r\n          >\r\n            {state.loading ? <ButtonLoader /> : 'Register '}\r\n          </button>\r\n          {/* {state.errors.length <= 0 && ( */}\r\n          <span\r\n            className='Register__span'\r\n            style={{ opacity: state.errors.length > 0 ? 0 : 100 }}\r\n          >\r\n            Already have an account <Link to='login'>Log in</Link>\r\n          </span>\r\n          {/* Register Errors*/}\r\n          {state.errors ? (\r\n            <p className='Register__error'>\r\n              {state.errors.length > 0 && displayErrors()}\r\n            </p>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\Auth\\LogIn\\LogIn.js",[],"C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\Messages\\MessagesHeader\\MessagesHeader.js",["75","76","77","78","79","80"],"import React, { Component } from 'react';\r\nimport './MessagesHeader.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faVideo,\r\n  faPhone,\r\n  faEnvelope,\r\n  faTimesCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ConversationHeader extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <header className='ConversationHeader'>\r\n          {/* ConversationHeader User */}\r\n          <div className='ConversationHeader__user'>\r\n            <img\r\n              src={this.props.currentChannel&&this.props.currentChannel.avatar}\r\n              alt='User Photo'\r\n              className='ConversationHeader__photo'\r\n            />\r\n            <h3 className='ConversationHeader__name'>{this.props.currentChannel&&this.props.currentChannel.name}</h3>\r\n          </div>\r\n          {/* ConversationHeader CTA */}\r\n          {/* <div className='ConversationHeader__cta'>\r\n            <FontAwesomeIcon\r\n              icon={faEnvelope}\r\n              className='ConversationHeader__icon'\r\n            />\r\n            <FontAwesomeIcon\r\n              icon={faPhone}\r\n              className='ConversationHeader__icon'\r\n            />\r\n            <FontAwesomeIcon\r\n              icon={faVideo}\r\n              className='ConversationHeader__icon'\r\n            />\r\n          </div> */}\r\n\r\n          {/* Conversation closed */}\r\n          {/* <div className='ConversationHeader__closer'>\r\n            <FontAwesomeIcon\r\n              icon={faTimesCircle}\r\n              className='ConversationHeader__icon'\r\n            />\r\n          </div> */}\r\n          {/* <div> */}\r\n            {/* <form>\r\n              <input\r\n                placeholder='Search messages'\r\n                className='ConversationHeader__search'\r\n                id='search'\r\n                onChange={handleSearchChange}\r\n              />\r\n              <label htmlFor='search'>\r\n                <FontAwesomeIcon\r\n                  icon={faSearch}\r\n                  className={ConversationHeader__icon_search}\r\n                />\r\n              </label>\r\n            </form> */}\r\n          {/* </div> */}\r\n        </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConversationHeader;\r\n",["81","82"],"C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\store\\actions\\types.js",[],"C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\Header\\Header.js",["83"],"import React, { Component } from 'react';\r\nimport './Header.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\nimport Dropdown from './Dropdown/Dropdown';\r\nimport ProfileModal from './ProfileModal/ProfileModal';\r\nimport { connect } from 'react-redux';\r\nimport firebase from '../../firebase';\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    toggler: false,\r\n    profileModal: false,\r\n    user: this.props.currentUser,\r\n  };\r\n\r\n  handleDropdown = () => {\r\n    const toggler = this.state.toggler;\r\n    this.setState({ toggler: !toggler });\r\n  };\r\n\r\n  handleProfileModal = () => {\r\n    const profileModal = this.state.profileModal;\r\n    this.setState({ profileModal: !profileModal });\r\n    this.setState({ toggler: false });\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then((user) => {\r\n        console.log(user + 'Sign Out');\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { currentUser } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <header className={'Header'}>\r\n          {/* <HeaderSearch /> */}\r\n          <nav className='Header__userNav'>\r\n            <div className='Header__user'>\r\n              <img\r\n                src={currentUser && currentUser.photoURL}\r\n                className='Header__userPhoto'\r\n              />\r\n              <div className='Header__userName'>\r\n                {currentUser && currentUser.displayName}\r\n              </div>\r\n            </div>\r\n            <FontAwesomeIcon\r\n              icon={faCaretDown}\r\n              className='Header__icon'\r\n              onClick={this.handleDropdown}\r\n            />\r\n          </nav>\r\n\r\n          {this.state.toggler ? (\r\n            <Dropdown\r\n              handleProfileModal={this.handleProfileModal}\r\n              handleSignOut={this.handleSignOut}\r\n            />\r\n          ) : null}\r\n        </header>\r\n        {this.state.profileModal ? (\r\n          <ProfileModal\r\n            handleProfileModal={this.handleProfileModal}\r\n            currentUser={currentUser}\r\n          />\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.user.currentUser,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\UI\\CssLoader\\CssLoader.js",[],"C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\SidePanel\\SidePanel.js",[],"C:\\Users\\Sabir Nawaz\\Desktop\\ticktalk\\src\\components\\Header\\Dropdown\\Dropdown.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":13,"column":3,"nodeType":"90","endLine":14,"endColumn":30},{"ruleId":"84","replacedBy":"91"},{"ruleId":"86","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":248,"column":15,"nodeType":"95","endLine":248,"endColumn":62},{"ruleId":"96","severity":1,"message":"97","line":3,"column":10,"nodeType":"98","messageId":"99","endLine":3,"endColumn":25},{"ruleId":"96","severity":1,"message":"100","line":5,"column":3,"nodeType":"98","messageId":"99","endLine":5,"endColumn":10},{"ruleId":"96","severity":1,"message":"101","line":6,"column":3,"nodeType":"98","messageId":"99","endLine":6,"endColumn":10},{"ruleId":"96","severity":1,"message":"102","line":7,"column":3,"nodeType":"98","messageId":"99","endLine":7,"endColumn":13},{"ruleId":"96","severity":1,"message":"103","line":8,"column":3,"nodeType":"98","messageId":"99","endLine":8,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":18,"column":13,"nodeType":"90","endLine":22,"endColumn":15},{"ruleId":"84","replacedBy":"106"},{"ruleId":"86","replacedBy":"107"},{"ruleId":"88","severity":1,"message":"89","line":45,"column":15,"nodeType":"90","endLine":48,"endColumn":17},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["108"],["109"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'faVideo' is defined but never used.","'faPhone' is defined but never used.","'faEnvelope' is defined but never used.","'faTimesCircle' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["108"],["109"],"no-global-assign","no-unsafe-negation"]